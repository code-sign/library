{"version":3,"sources":["images/work/ourwork-aritaum-img.jpg","images/work/ourwork-asiana-img.jpg","images/work/ourwork-lottehotel-img.jpg","images/work/ourwork-lottetower-img.jpg","images/work/ourwork-namuh-img.jpg","images/work/ourwork-samsunghospital-img.jpg","layout/Header.js","layout/Home.js","component/ViewCmp.js","component/ListCmp.js","layout/Work.js","layout/Contact.js","App.js","layout/Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuToggle","setState","isMenuOpen","state","menuTween","reverse","play","nav","TweenMax","fromTo","x","opacity","display","pause","_this2","react_default","a","createElement","className","href","onClick","ref","NavLink","exact","to","activeClassName","React","Component","Home","ViewCmp","web","from","transform","config","duration","styles","style","src","img","title","info","closeView","ListCmp","clickCheck","isOpen","document","getElementsByTagName","classList","add","remove","Fragment","Fade_default","bottom","component_ViewCmp","Work","handleCreate","childIsOpen","listData","img1","img2","img3","img4","img5","img6","console","log","map","list","i","component_ListCmp","idx","key","onCreate","Contact","App","id","layout_Header","Switch","Route","path","component","Root","BrowserRouter","src_App","Boolean","window","location","hostname","match","ReactDOM","render","layout_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d45b42ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ourwork-aritaum-img.9b3c16ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-asiana-img.08aefc3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-lottehotel-img.5ecbb0a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-lottetower-img.58c87334.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-namuh-img.4757e691.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-samsunghospital-img.8429c3fb.jpg\";","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Tween, Timeline } from 'react-gsap';\nimport { TweenMax } from 'gsap';\n\nclass Header extends React.Component { \n    constructor(props){\n        super(props);\n        this.state = {\n            isMenuOpen: false,\n        }\n\n        this.nav = null;\n        this.menuTween = null;\n    }\n\n\n    \n    componentDidMount() {\n        this.menuTween = TweenMax.fromTo(this.nav, .4, \n            {\n                x:-30,\n                opacity:0,\n                display:'none'\n            },\n            {\n                x:0,\n                opacity:1,\n                display:'block'\n            },\n        );\n\n        // 초기 트윈 셋팅 pause\n        this.menuTween.pause();\n    }\n\n    menuToggle = () => {\n        this.setState({\n            isMenuOpen: !this.state.isMenuOpen\n        });\n        !this.state.isMenuOpen ? this.menuTween.play() : this.menuTween.reverse();\n        // console.log(this.state.isMenuOpen);\n    }\n\n\n    render(){\n        return (\n            <header>\n                <h1 className=\"logo\">Logo</h1>\n                <a href=\"#none\" className=\"menu\" onClick={this.menuToggle}><span className=\"hide\">Menu</span></a>\n\n                {/* ref */}\n                <nav ref={nav => this.nav = nav}>\n                    <ul>\n                        <li><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></li>\n                        <li><NavLink to=\"/Work\" activeClassName=\"active\">Work</NavLink></li>\n                        <li><NavLink to=\"/Contact\" activeClassName=\"active\">Contact</NavLink></li>\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n\n};\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        Home Layout\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\r\nimport { Spring, Transition, animated } from 'react-spring';\r\n\r\nimport '../css/item.scss';\r\n\r\nclass ViewCmp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Spring \r\n                from={{transform:'scale(1)'}} \r\n                to={{transform:'scale(1)'}}\r\n                config={{duration:400}}>\r\n                {styles =>\r\n\r\n                <div style={styles} className=\"item_view\">\r\n                    <div className=\"visual\">\r\n                        <img src={this.props.img}/>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <p>\r\n                            <strong>{this.props.title}</strong>\r\n                        </p>\r\n                        <p>\r\n                            {this.props.info}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"cont\">\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                    </div>\r\n                    {/* 컴포넌트에서 props로 이벤트 정의 후 onClick 바인딩 */}\r\n                    <a href=\"#none\" className=\"close\" onClick={this.props.closeView}><span className=\"hide\">close</span></a>\r\n                </div>\r\n\r\n                }\r\n            </Spring>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCmp;","import React, { Component } from 'react';\r\nimport '../css/item.scss';\r\n\r\nimport ViewCmp from '../component/ViewCmp';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n\r\nclass ListCmp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen : false\r\n        }\r\n    }\r\n\r\n    // event\r\n    clickCheck = () => {\r\n        // console.log('click!', this.props.title, this.props.idx);\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n        document.getElementsByTagName('body')[0].classList.add('hide_sc');\r\n\r\n        // 상태값을 onCreate를 통하여 부모컴포넌트로 전달\r\n        // this.props.onCreate(this.state.isOpen);\r\n    }\r\n\r\n    // closeView\r\n    closeView = () => {\r\n        // console.log('close');\r\n        this.setState({\r\n            isOpen : !this.state.isOpen\r\n        });\r\n        document.getElementsByTagName('body')[0].classList.remove('hide_sc');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                    <div className=\"item_card\">\r\n\r\n                        {/* \r\n                            Reveal 적용 위치 주의 \r\n                            item_card가 아닌 하위 엘리먼트에 적용\r\n                            뷰페이지 뜰때 레이아웃 깨짐 방지\r\n                        */}\r\n                        <Fade bottom>\r\n                        <a href=\"#none\" onClick={this.clickCheck}>\r\n                            <div className=\"img\">\r\n                                <img src={this.props.img}/>\r\n                            </div>\r\n                            <div className=\"cont\">\r\n                                <p className=\"tit\">\r\n                                    <strong>{this.props.title}</strong>\r\n                                </p>\r\n                                <p>\r\n                                    {this.props.info}\r\n                                </p>\r\n                            </div>\r\n                        </a>\r\n                        </Fade>\r\n\r\n                        {/* view */}\r\n                        {/* \r\n                            props 설정\r\n                            닫기 클릭시 isOpen false \r\n                        */}\r\n                        {this.state.isOpen ? \r\n                            <ViewCmp \r\n                                title={this.props.title} \r\n                                info={this.props.info} \r\n                                img={this.props.img} \r\n                                closeView={this.closeView} \r\n                            />\r\n                            :\r\n\r\n                            // 그냥 날라가니까 애니메이션 처리시에는 다르게 처리\r\n                            // nav 메뉴처럼..\r\n                            ''\r\n                        }\r\n\r\n                    </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListCmp;","import React, { Component } from 'react';\nimport ListCmp from '../component/ListCmp';\n\n// image import\nimport img1 from '../images/work/ourwork-aritaum-img.jpg';\nimport img2 from '../images/work/ourwork-asiana-img.jpg';\nimport img3 from '../images/work/ourwork-lottehotel-img.jpg';\nimport img4 from '../images/work/ourwork-lottetower-img.jpg';\nimport img5 from '../images/work/ourwork-namuh-img.jpg';\nimport img6 from '../images/work/ourwork-samsunghospital-img.jpg';\n\n\nclass Work extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        listData: [\n            {\n                title:'work1',\n                info:'working working1',\n                img:img1\n            },\n            {\n                title:'work2',\n                info:'working working2',\n                img:img2\n            },\n            {\n                title:'work3',\n                info:'working working3',\n                img:img3\n            },\n            {\n                title:'work4',\n                info:'working working4',\n                img:img4\n            },\n            {\n                title:'work5',\n                info:'working working5',\n                img:img5\n            },\n            {\n                title:'work6',\n                info:'working working6',\n                img:img6\n            },\n        ]\n    }\n  }\n\n\n\n  //Loading ing\n  componentDidMount(){\n      console.log('didMount');\n    //로드되는 시간 동안 로딩바 노출\n  }\n\n\n  //자식컴포넌트 ListCmp 의 상태값을 받아오기\n  handleCreate = (childIsOpen) => {\n    //   console.log('isOpen은',childIsOpen);\n  }\n\n  render(){\n      return (\n          <React.Fragment>\n            <div className=\"item_wrap colbox col3\">\n                {/* ListCmp 맵핑 */}\n                {this.state.listData.map((list,i) => {\n                    return (\n                        <ListCmp \n                            title={list.title} \n                            info={list.info} \n                            img={list.img} \n                            idx={i} \n                            key={i} \n                            onCreate={this.handleCreate}\n                        />\n                    )\n                })}\n            </div>\n\n            {/* \n                자식에서 부모로 전달하기\n                ListCmp isOpen 을 어떻게 받아오기\n                부모 Cmp : 콜백정의 후 자식에게 props로 전달\n                자식 Cmp : this.props.콜백  불러오고 파라미터로 데이터를 전달\n                콜백함수 내에서 해당 변수를 사용\n            */}\n          </React.Fragment>\n      )\n  }\n\n}\n\nexport default Work;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div>\n        Contact Layout\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport './css/index.scss';\n\n// Router\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './layout/Header';\n\n// import Home from './layout/Home';\n// import Work from './layout/Work';\n// import View from './layout/View';\n\n// 하나의 디렉토리에서 import 하기 위해 index.js 에서 export 설정 필요\nimport { Home, Work, Contact } from './layout';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"container\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/Work\" component={Work} />\n              <Route path=\"/Contact\" component={Contact} />\n            </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from '../App';\n\nconst Root = () => (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './layout/Root';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}