{"version":3,"sources":["images/work/ourwork-lottetower-img.jpg","images/work/ourwork-aritaum-img.jpg","images/work/ourwork-asiana-img.jpg","images/work/ourwork-lottehotel-img.jpg","images/work/ourwork-namuh-img.jpg","images/work/ourwork-samsunghospital-img.jpg","layout/Header.js","component/BannerCmp.js","component/ViewCmp.js","component/ListCmp.js","layout/Guide.js","layout/Home.js","layout/Work.js","layout/Contact.js","App.js","layout/Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuToggle","setState","isMenuOpen","state","menuTween","reverse","play","nav","TweenMax","fromTo","x","opacity","display","pause","_this2","react_default","a","createElement","className","href","onClick","ref","NavLink","exact","to","activeClassName","React","Component","BannerCmp","Fragment","ViewCmp","web","from","transform","config","duration","styles","style","src","img","title","info","closeView","ListCmp","clickCheck","isOpen","document","getElementsByTagName","classList","add","remove","Fade_default","bottom","component_ViewCmp","Guide","component_ListCmp","imgLotteTower","component_BannerCmp","Home","grid","querySelector","iso","Isotope","itemSelector","masonry","columnWidth","addEventListener","event","filterValue","target","getAttribute","arrange","filter","data-filter","Work","handleCreate","childIsOpen","listData","img1","img2","img3","img4","img5","img6","isLoaded","imagesLoaded","console","log","gutter","isFitWidth","map","list","i","idx","key","onCreate","Contact","App","id","layout_Header","Switch","Route","path","component","Root","BrowserRouter","src_App","Boolean","window","location","hostname","match","ReactDOM","render","layout_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4277c1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ourwork-lottetower-img.58c87334.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-aritaum-img.9b3c16ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-asiana-img.08aefc3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-lottehotel-img.5ecbb0a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-namuh-img.4757e691.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ourwork-samsunghospital-img.8429c3fb.jpg\";","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Tween, Timeline } from 'react-gsap';\nimport { TweenMax } from 'gsap';\n\nclass Header extends React.Component { \n    constructor(props){\n        super(props);\n        this.state = {\n            isMenuOpen: false,\n        }\n\n        this.nav = null;\n        this.menuTween = null;\n    }\n    \n    componentDidMount() {\n        this.menuTween = TweenMax.fromTo(this.nav, .4, \n            {\n                x:-30,\n                opacity:0,\n                display:'none'\n            },\n            {\n                x:0,\n                opacity:1,\n                display:'block'\n            },\n        );\n\n        // 초기 트윈 셋팅 pause\n        this.menuTween.pause();\n    }\n\n    menuToggle = () => {\n        this.setState({\n            isMenuOpen: !this.state.isMenuOpen\n        });\n        !this.state.isMenuOpen ? this.menuTween.play() : this.menuTween.reverse();\n        // console.log(this.state.isMenuOpen);\n    }\n\n    render(){\n        return (\n            <header>\n                <h1 className=\"logo\">Logo</h1>\n                <a href=\"#none\" className=\"menu\" onClick={this.menuToggle}><span className=\"hide\">Menu</span></a>\n\n                {/* ref */}\n                <nav ref={nav => this.nav = nav}>\n                    <ul>\n                        <li><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></li>\n                        <li><NavLink to=\"/Guide\" activeClassName=\"active\">Guide</NavLink></li>\n                        <li><NavLink to=\"/Work\" activeClassName=\"active\">Work</NavLink></li>\n                        <li><NavLink to=\"/Contact\" activeClassName=\"active\">Contact</NavLink></li>\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n\n};\n\nexport default Header;","import React, { Component } from 'react';\r\nimport '../css/banner.scss';\r\n\r\n// 함수형 컴포넌트\r\n// function BannerCmp() {\r\n\r\n// ES6\r\nconst BannerCmp = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <a href=\"#none\" className=\"banner\">\r\n                <p className=\"cate\">\r\n                    Project Request\r\n                </p>\r\n                <p className=\"tit\">\r\n                    우리에게 의뢰할 프로젝트가 있으신가요?\r\n                </p>\r\n                <div className=\"cont\">\r\n                    <p>\r\n                        프로젝트 또는 공동작업을 하고싶나요? <br/>\r\n                        우리가 어떻게 당신을 도울 수 있는지에 대해 자유롭게 이야기해주세요. 애드캡슐은 항상 당신의 의견을 기다립니다.\r\n                    </p>\r\n                </div>\r\n            </a>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// 함수형 컴포넌트 변경전\r\n// class BannerCmp extends React.Component {\r\n//     constructor(props){\r\n//         super(props);\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <React.Fragment>\r\n//             <a href=\"#none\" className=\"banner\">\r\n//                 <p className=\"cate\">\r\n//                     Project Request\r\n//                 </p>\r\n//                 <p className=\"tit\">\r\n//                     우리에게 의뢰할 프로젝트가 있으신가요?\r\n//                 </p>\r\n//                 <div className=\"cont\">\r\n//                     <p>\r\n//                         프로젝트 또는 공동작업을 하고싶나요? <br/>\r\n//                         우리가 어떻게 당신을 도울 수 있는지에 대해 자유롭게 이야기해주세요. 애드캡슐은 항상 당신의 의견을 기다립니다.\r\n//                     </p>\r\n//                 </div>\r\n//             </a>\r\n//             </React.Fragment>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default BannerCmp;","import React, { Component } from 'react';\r\nimport { Spring, Transition, animated } from 'react-spring';\r\n\r\nimport '../css/item.scss';\r\n\r\nclass ViewCmp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Spring \r\n                from={{transform:'scale(1)'}} \r\n                to={{transform:'scale(1)'}}\r\n                config={{duration:400}}>\r\n                {styles =>\r\n\r\n                <div style={styles} className=\"item_view\">\r\n                    <div className=\"visual\">\r\n                        <img src={this.props.img}/>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        <p>\r\n                            <strong>{this.props.title}</strong>\r\n                        </p>\r\n                        <p>\r\n                            {this.props.info}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"cont\">\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                        상세 컨텐츠<br/>\r\n                    </div>\r\n                    {/* 컴포넌트에서 props로 이벤트 정의 후 onClick 바인딩 */}\r\n                    <a href=\"#none\" className=\"close\" onClick={this.props.closeView}><span className=\"hide\">close</span></a>\r\n                </div>\r\n\r\n                }\r\n            </Spring>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCmp;","import React, { Component } from 'react';\r\nimport '../css/item.scss';\r\n\r\nimport ViewCmp from '../component/ViewCmp';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass ListCmp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen : false\r\n        }\r\n    }\r\n \r\n    // event\r\n    clickCheck = () => {\r\n        // console.log('click!', this.props.title, this.props.idx);\r\n        this.setState({\r\n            isOpen : true\r\n        });\r\n        document.getElementsByTagName('body')[0].classList.add('hide_sc');\r\n\r\n        // 상태값을 onCreate를 통하여 부모컴포넌트로 전달\r\n        // this.props.onCreate(this.state.isOpen);\r\n    }\r\n\r\n    // closeView\r\n    closeView = () => {\r\n        // console.log('close');\r\n        this.setState({\r\n            isOpen : !this.state.isOpen\r\n        });\r\n        document.getElementsByTagName('body')[0].classList.remove('hide_sc');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                    <div className=\"item_card\">\r\n\r\n                        {/* \r\n                            React Reveal 적용 위치 주의 \r\n                            item_card가 아닌 하위 엘리먼트에 적용\r\n                            뷰페이지 뜰때 레이아웃 깨짐 방지\r\n                        */}\r\n                        <Fade bottom>\r\n                        <a href=\"#none\" className=\"card\" onClick={this.clickCheck}>\r\n                            <div className=\"img\">\r\n                                <img src={this.props.img}/>\r\n                            </div>\r\n                            <div className=\"cont\">\r\n                                <p className=\"tit\">\r\n                                    <strong>{this.props.title}</strong>\r\n                                </p>\r\n                                <p>\r\n                                    {this.props.info}\r\n                                </p>\r\n                            </div>\r\n                        </a>\r\n                        </Fade>\r\n\r\n                        {/* view */}\r\n                        {/* \r\n                            props 설정\r\n                            닫기 클릭시 isOpen false \r\n                        */}\r\n                        {this.state.isOpen ? \r\n                            <ViewCmp \r\n                                title={this.props.title} \r\n                                info={this.props.info} \r\n                                img={this.props.img} \r\n                                closeView={this.closeView} \r\n                            />\r\n                            :\r\n\r\n                            // 그냥 날라가니까 애니메이션 처리시에는 다르게 처리\r\n                            // nav 메뉴처럼\r\n                            ''\r\n                        }\r\n\r\n                    </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListCmp;","import React, { Component } from 'react';\nimport BannerCmp from '../component/BannerCmp';\nimport ListCmp from '../component/ListCmp';\n\nimport imgLotteTower from '../images/work/ourwork-lottetower-img.jpg';\n\n\nclass Guide extends Component {\n  render() {\n    return (\n      <div>\n        Guide Layout\n\n        {/* guide */}\n        <div className=\"guide\">\n          <h3>Component</h3>\n\n          <div className=\"group\">\n            <h4>Button</h4>\n            <button>default</button>\n            <button className=\"color\">color</button>\n            <button className=\"action\">전체보기</button>\n          </div>\n\n          <div className=\"group\">\n            <h4>Card</h4>\n            <div className=\"item_wrap\">\n              <ListCmp \n                title=\"Title\"\n                info=\"Info description\"\n                img={imgLotteTower}\n              />\n            </div>\n          </div>\n\n          <div className=\"group\">\n            <h4>Banner</h4>\n            <BannerCmp />\n          </div>\n\n        </div>\n        {/* //guide */}\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default Guide;\n\n","import React, { Component } from 'react';\n\n// isotope\nimport Isotope from 'isotope-layout';\n\nclass Home extends Component {\n\n\n  componentDidMount(){\n\n    // Isotope js\n    var grid = document.querySelector('.grid');\n    var iso = new Isotope( grid, {\n      itemSelector: '.grid-item',\n      masonry: {\n        columnWidth: 10\n      }\n    });\n\n    // bind filter button click\n    var filtersElem = document.querySelector('.filters-button-group');\n    filtersElem.addEventListener( 'click', function( event ) {\n      \n      var filterValue = event.target.getAttribute('data-filter');\n\t\t\tiso.arrange({ filter: filterValue });\n    });\n    \n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n          Home Layout\n\n\n          <div className=\"filters-button-group\">\n            <button data-filter=\"*\">all</button>\n            <button data-filter=\".web\">web</button>\n            <button data-filter=\".mobile\">mobile</button>\n          </div>\n\n          <div className=\"grid\">\n            <div className=\"grid-item web\">\n              1\n            </div>\n            <div className=\"grid-item mobile\">\n              2\n            </div>\n            <div className=\"grid-item mobile\">\n              3\n            </div>\n            <div className=\"grid-item mobile\">\n              4\n            </div>\n            <div className=\"grid-item mobile\">\n              5\n            </div>\n            <div className=\"grid-item web mobile\">\n              6\n            </div>\n            <div className=\"grid-item web\">\n              7\n            </div>\n            <div className=\"grid-item web\">\n              8\n            </div>\n            <div className=\"grid-item web\">\n              9\n            </div>\n            <div className=\"grid-item web\">\n              10\n            </div>\n          </div>\n          \n      </React.Fragment>\n    );\n\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport ListCmp from '../component/ListCmp';\n\nimport Isotope from 'isotope-layout';\nimport imagesLoaded from 'imagesloaded';\n\n// image import\nimport img1 from '../images/work/ourwork-aritaum-img.jpg';\nimport img2 from '../images/work/ourwork-asiana-img.jpg';\nimport img3 from '../images/work/ourwork-lottehotel-img.jpg';\nimport img4 from '../images/work/ourwork-lottetower-img.jpg';\nimport img5 from '../images/work/ourwork-namuh-img.jpg';\nimport img6 from '../images/work/ourwork-samsunghospital-img.jpg';\n\n\nclass Work extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        listData: [\n            {\n                title:'work1',\n                info:'working working1',\n                img:img1\n            },\n            {\n                title:'work2',\n                info:'working working2',\n                img:img2\n            },\n            {\n                title:'work3',\n                info:'working working3',\n                img:img3\n            },\n            {\n                title:'work4',\n                info:'working working4',\n                img:img4\n            },\n            {\n                title:'work5',\n                info:'working working5',\n                img:img5\n            },\n            {\n                title:'work6',\n                info:'working working6',\n                img:img6\n            },\n            {\n                title:'work1',\n                info:'working working1',\n                img:img1\n            },\n            {\n                title:'work2',\n                info:'working working2',\n                img:img2\n            },\n            {\n                title:'work3',\n                info:'working working3',\n                img:img3\n            },\n            {\n                title:'work4',\n                info:'working working4',\n                img:img4\n            },\n            {\n                title:'work5',\n                info:'working working5',\n                img:img5\n            },\n            {\n                title:'work6',\n                info:'working working6',\n                img:img6\n            },\n        ],\n        isLoaded: false,\n    }\n  }\n\n\n\n  //Loading ing\n  componentDidMount(){\n\n    // isotope안에서 state변경 위함\n    // isotope안에서 this가 바뀌므로 this를 _this에 저장해서 사용\n    var _this = this;\n\n    // Isotope js\n    var grid = document.querySelector('.item_wrap');\n\n    // imagesLoaded / Detect when images have been loaded.\n    imagesLoaded(grid, function(){\n        console.log('loaded');\n\n        // 로드되는 시간 동안 로딩바 노출\n        _this.setState({\n            isLoaded: !_this.state.isLoaded\n        });\n\n        var iso = new Isotope( grid, {\n            itemSelector: '.item_card',\n            masonry: {\n                columnWidth: 300,\n\t\t\t\tgutter: 100,\n\t\t\t\tisFitWidth: true\n            }\n        });\n    \n        // bind filter button click\n        var filtersElem = document.querySelector('.filters-button-group');\n        filtersElem.addEventListener( 'click', function( event ) {\n            \n            var filterValue = event.target.getAttribute('data-filter');\n                iso.arrange({ filter: filterValue });\n        });\n\n    });\n    \n\n  }\n\n\n  //자식컴포넌트 ListCmp 의 상태값을 받아오기\n  handleCreate = (childIsOpen) => {\n    //   console.log('isOpen은',childIsOpen);\n  }\n\n  render(){\n      return (\n          <React.Fragment>\n\n            {/* loading */}\n            {this.state.isLoaded ? \n            <p>success</p>\n            :\n            <p>Loading ...</p>\n            }\n\n            <div className=\"filters-button-group\">\n                <button data-filter=\"*\">all</button>\n                <button data-filter=\".web\">web</button>\n                <button data-filter=\".mobile\">mobile</button>\n            </div>\n\n\n            {/* <div className=\"item_wrap colbox col3\"> */}\n            <div className=\"item_wrap\">\n                {/* ListCmp 맵핑 */}\n                {this.state.listData.map((list,i) => {\n                    return (\n                        <ListCmp \n                            title={list.title} \n                            info={list.info} \n                            img={list.img} \n                            idx={i} \n                            key={i} \n                            onCreate={this.handleCreate}\n                        />\n                    )\n                })}\n            </div>\n\n\n            {/* \n                자식에서 부모로 전달하기\n                ListCmp isOpen 을 어떻게 받아오기\n                부모 Cmp : 콜백정의 후 자식에게 props로 전달\n                자식 Cmp : this.props.콜백  불러오고 파라미터로 데이터를 전달\n                콜백함수 내에서 해당 변수를 사용\n            */}\n          </React.Fragment>\n      )\n  }\n\n}\n\nexport default Work;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div>\n        Contact Layout\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport './css/index.scss';\n\n// Router\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './layout/Header';\n\n// guide 확인용\nimport Guide from './layout/Guide';\n\n// import Home from './layout/Home';\n// import Work from './layout/Work';\n// import View from './layout/View';\n\n// 하나의 디렉토리에서 import 하기 위해 index.js 에서 export 설정 필요\nimport { Home, Work, Contact } from './layout';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"container\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/Guide\" component={Guide} />\n              <Route path=\"/Work\" component={Work} />\n              <Route path=\"/Contact\" component={Contact} />\n            </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from '../App';\n\nconst Root = () => (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './layout/Root';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}